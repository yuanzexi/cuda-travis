language: cpp

sudo: enabled

compiler:
  - gcc

jobs:
  include:
  - name: CUDA 10.0
    os: linux
    dist: xenial
    env:
    - CUDA=10.0.130-1
    - CUDA_SHORT=10.0
    - CUDNN_MAJOR=7
    - CUDNN=7.6.5.*
    - TENSORRT=7.0.0
    - UBUNTU_VERSION=ubuntu1604
  - name: CUDA 10.2
    os: linux
    dist: xenial
    env:
    - CUDA=10.2.89-1
    - CUDA_SHORT=10.2
    - CUDNN_MAJOR=8
    - CUDNN=8.0.4.*
    - TENSORRT=7.2.3
    - UBUNTU_VERSION=ubuntu1604

before_install:
  - INSTALLER=cuda-repo-${UBUNTU_VERSION}_${CUDA}_amd64.deb
  - wget http://developer.download.nvidia.com/compute/cuda/repos/${UBUNTU_VERSION}/x86_64/${INSTALLER}
  - sudo dpkg -i ${INSTALLER}
  - wget https://developer.download.nvidia.com/compute/cuda/repos/${UBUNTU_VERSION}/x86_64/7fa2af80.pub
  - sudo apt-key add 7fa2af80.pub
  - wget https://developer.download.nvidia.com/compute/machine-learning/repos/${UBUNTU_VERSION}/x86_64/nvidia-machine-learning-repo-${UBUNTU_VERSION}_1.0.0-1_amd64.deb
  - sudo dpkg -i nvidia-machine-learning-repo-*.deb
  - sudo apt update -qq
  - sudo apt install -y cuda-core-${CUDA_SHORT/./-} cuda-cudart-dev-${CUDA_SHORT/./-} cuda-cufft-dev-${CUDA_SHORT/./-}
  - CUDNN_VERSION=${CUDNN}-1+cuda${CUDA_SHORT}
  - sudo apt install -y libcudnn${CUDNN_MAJOR}=${CUDNN_VERSION} libcudnn${CUDNN_MAJOR}-dev=${CUDNN_VERSION}
  - TENSORRT_VERSION=${TENSORRT}-1+cuda${CUDA_SHORT}
  - sudo apt install -y libnvinfer7=${TENSORRT_VERSION} libnvonnxparsers7=${TENSORRT_VERSION} libnvparsers7=${TENSORRT_VERSION} libnvinfer-plugin7=${TENSORRT_VERSION} libnvinfer-dev=${TENSORRT_VERSION} libnvonnxparsers-dev=${TENSORRT_VERSION} libnvparsers-dev=${TENSORRT_VERSION} libnvinfer-plugin-dev=${TENSORRT_VERSION} python-libnvinfer=${TENSORRT_VERSION} python3-libnvinfer=${TENSORRT_VERSION}
  - sudo apt clean
  - CUDA_HOME=/usr/local/cuda-${CUDA_SHORT}
  - LD_LIBRARY_PATH=${CUDA_HOME}/lib64:${LD_LIBRARY_PATH}
  - PATH=${CUDA_HOME}/bin:${PATH}

before_script:
  - mkdir build
  - cd build
  - cmake ..

script: make -j
